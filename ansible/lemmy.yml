---
- hosts: all

  # Install python if required
  # https://www.josharcher.uk/code/ansible-python-connection-failure-ubuntu-server-1604/
  gather_facts: False
  pre_tasks:
    - name: install python for Ansible
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal python-setuptools)
      args:
        executable: /bin/bash
      register: output
      changed_when: output.stdout != ""
    - setup: # gather facts

  tasks:
  - name: install dependencies
    apt:
      pkg: ['nginx', 'docker-compose', 'docker.io', 'certbot']

  - name: create lemmy folder
    file: path={{item.path}} state=directory
    with_items:
      - { path: '/lemmy/' }
      - { path: '/lemmy/volumes/' }
      - { path: '/var/www/certbot' }

  - name:  add all template files
    template: src={{item.src}} dest={{item.dest}}
    with_items:
      - { src: 'templates/env', dest: '/lemmy/.env' }
      - { src: 'templates/docker-compose.yml', dest: '/lemmy/docker-compose.yml' }
      - { src: 'templates/nginx.conf', dest: '/lemmy/nginx.conf' }
    vars:
      postgres_password: "{{ lookup('password', 'passwords/{{ inventory_hostname }}/postgres chars=ascii_letters,digits') }}"
      jwt_password: "{{ lookup('password', 'passwords/{{ inventory_hostname }}/jwt chars=ascii_letters,digits') }}"

  - name: set env file permissions
    file:
      path: "/lemmy/.env"
      state: touch
      mode: 0600
      access_time: preserve
      modification_time: preserve

  - name: request initial letsencrypt certificate
    command: certbot certonly --standalone --agree-tos -d '{{ domain }}' -m '{{ letsencrypt_contact_email }}'
    args:
      creates: '/etc/letsencrypt/live/{{domain}}/privkey.pem'

  - name: enable and start docker service
    systemd:
      name: docker
      enabled: yes
      state: started

  - name: start docker-compose
    docker_compose:
      project_src: /peertube/
      state: present
      pull: yes

  - name: certbot renewal cronjob
    cron:
      special_time=daily
      name=certbot-renew
      user=root
      job="certbot certonly --webroot --webroot-path=/var/www/certbot -d '{{ domain }}' --deploy-hook 'docker-compose -f /peertube/docker-compose.yml exec nginx nginx -s reload'"
