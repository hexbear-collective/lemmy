server {
    listen 443 ssl http2;
    server_name dev.chapo.chat;

    ssl_certificate /opt/cloudflare/cf-origin-cert.pem;
    ssl_certificate_key /opt/cloudflare/cf-origin-key.pem;

    # Various TLS hardening settings
    # https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_session_timeout  10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Hide nginx version
    server_tokens off;

    # Enable compression for JS/CSS/HTML bundle, for improved client load times.
    # It might be nice to compress JSON, but leaving that out to protect against potential
    # compression+encryption information leak attacks like BREACH.
    gzip on;
    gzip_types text/css application/javascript image/svg+xml;
    gzip_vary on;

    # Only connect to this site via HTTPS for the two years
    add_header Strict-Transport-Security "max-age=63072000";

    # Various content security headers
    add_header Referrer-Policy "same-origin";
    add_header X-Content-Type-Options "nosniff";
    add_header X-Frame-Options "DENY";
    add_header X-XSS-Protection "1; mode=block";

    # Upload limit for pictrs
    client_max_body_size 20M;

    # Rate limit TODO: Re-enable
    #limit_req zone=lemmy_ratelimit burst=30 nodelay;

    location / {
        proxy_pass http://0.0.0.0:8536;
        include proxy-set-headers.conf;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Redirect pictshare images to pictrs
    location ~ /pictshare/(.*)$ {
      return 301 /pictrs/image/$1;
    }

    # pict-rs images
    location /pictrs {
      location /pictrs/image {
        proxy_pass http://0.0.0.0:8537/image;
        include proxy-set-headers.conf;
      }
      # Block the import
      return 403;
    }

    # Block remote URL image downloads via the API
    location /pictrs/image/download {
      deny all;
      return 404;
    }

    location /iframely/ {
      proxy_pass http://0.0.0.0:8061/;
      include proxy-set-headers.conf;
    }

    location /portainer/ {
      proxy_pass http://0.0.0.0:9000/;
      include proxy-set-headers.conf;
    }

    location /grafana/ {
      proxy_pass http://0.0.0.0:3000;
      proxy_http_version 1.1;
      include proxy-set-headers.conf;
      proxy_hide_header Upgrade ;
      proxy_set_header Connection "Keep-Alive";
      proxy_set_header Proxy-Connection "Keep-Alive";
    }
}
